initSidebarItems({"enum":[["HttpVersion","Possible values to pass to the `http_version` method."],["InfoType","Possible data chunks that can be witnessed as part of the `debug_function` callback."],["IpResolve","Possible values to pass to the `ip_resolve` method."],["NetRc","Options for `.netrc` parsing."],["ProxyType","Possible proxy types that libcurl currently understands."],["ReadError","Possible error codes that can be returned from the `read_function` callback."],["SeekResult","Possible return values from the `seek_function` callback."],["SslVersion","Possible values to pass to the `ssl_version` and `ssl_min_max_version` method."],["TimeCondition","Possible conditions for the `time_condition` method."],["WriteError","Possible error codes that can be returned from the `write_function` callback."]],"struct":[["Auth","Structure which stores possible authentication methods to get passed to `http_auth` and `proxy_auth`."],["Easy","Raw bindings to a libcurl \"easy session\"."],["Easy2","Raw bindings to a libcurl \"easy session\"."],["Form","Multipart/formdata for an HTTP POST request."],["Iter","An iterator over `List`"],["List","A linked list of a strings"],["Part","One part in a multipart upload, added to a `Form`."],["SslOpt","Structure which stores possible ssl options to pass to `ssl_options`."],["Transfer","A scoped transfer of information which borrows an `Easy` and allows referencing stack-local data of the lifetime `'data`."]],"trait":[["Handler","A trait for the various callbacks used by libcurl to invoke user code."]]});